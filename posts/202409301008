---
title: "JavaScript - basic 변수"
date: 2022-09-12T05:23:04+09:00
draft: false
tags: ['JavaScript']
categories: ["Programming"]
---


## JavaScript - Basic
### 변수
변수는 2단계로 이루어진다.
1. 변수의 **선언**
2. 변수에 대한 값을 **할당**

```js
let myNumber // myNumber라는 변수를 "선언"

myNumber = 100 // 앞에서 선언한 변수에 값을 "할당"
```
&nbsp;

용어 정리
	- 변수 : 데이터를 담을 수 있는 대상
	- 변수의 **선언**과 변수에 대한 값을 **할당**하는 것은 별개이다.
&nbsp;

일반적으로 변수의 선언과 할당이 동시에 이루어진다. (아래 코드 참조)
```js
let myNumber = 100
```
&nbsp;
&nbsp;

### 변수를 선언하는 명령어

#### `var`, `let`, `const` 각각의 차이는??

| 종류  | 선언 | 재선언 | 재할당 |
| ----- | ---- | ------ | ------ |
| var   | O    | O      | O      |
| let   | O    | X      | O      |
| const | O    | X      | X      |
&nbsp;

위 표와 같이
즉, `let`이나 `const`는 이미 선언했던 변수를 다시 선언할 수 없다.
하지만 `let`의 경우 값은 재할당 할 수 있다.
&nbsp;

```js
let name = 'abc'
console.log(name) // abc

let name = 'let'
console.log(name) // SyntaxError: Identifier 'name' has already been declared

// 그러나 값을 재할당하는 것은 가능하다
name = 'let'
console.log(name) // let
```
&nbsp;

'변수의 2단계'를 완벽히(?) 이해하지 못한다면 위 코드에서 `let`의 차이를 제대로 알 수 없다.
&nbsp;
&nbsp;


### 원시변수의 Data Type

-  **Boolean**
	- 논리적인 요소를 나타낸다.
	- true, false의 2가지 값을 가진다.
- **Null**
	- null(빈 값)을 가진다.
- **Undefined**
	- 값을 할당하지 않았을때, undefined를 가지게 된다.
- **Number**
	- 숫자 요소를 나타낸다.
	- 정확히는 Integer(정수)를 뜻한다.
- **String**
	- 문자열을 나타낸다.
	- 할당시 quotation(따옴표)로 반드시 감싸줘야 한다.

&nbsp;
&nbsp;

{{< admonition tip >}}

 **Null과 Undefined의 차이**
 간단히 말하자면 의도성으로 나눌 수 있다.
 Null은 의도적으로 값을 할당하지 않은 상태를 뜻하며,
 Undefined는 아직 값을 할당하지 않은 상태이다.
 즉, 변수를 선언만 하고 값을 할당하지 않았을때에는, 기본적으로 Undefined 값이 할당된다.
 [undefined와 null의 차이점을 설명하세요 | 2ssue's dev note](https://2ssue.github.io/common_questions_for_Web_Developer/docs/Javascript/13_undefined&null.html#undefined) 참조

{{< /admonition >}}
&nbsp;
&nbsp;


### 잦은 실수
- string 입력시 quatation marks(따옴표)를 깜빡해서 잦은 오류가 난다.
- 함수 내에서 `result`는 `=`을 사용하지 않는데 등호를 붙일 때가 있다.

---



#### `return`과 `console.log`의 차이
- `return`은 그 값을 변수에 할당 가능
- `console.log`는 변수에 할당 불가능
&nbsp;
&nbsp;

#### 매개변수와 인수의 차이
```js
function order(매개변수) {
... input
}

console.log(order(인수))
```
&nbsp;

비슷하지만 다른 역할이다.
매개변수(parameter)는 함수에서 사용할 값을 외부에서 받아들리이기 위해 정의된 **변수**!
인수(argument)는 함수 호출시, 매개변수로 전달할 **값**!!



